{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\stepDefinitions\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"filename\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\stepDefinitions\\\\Homepage.stepDef.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"plugins\":[{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\stepDefinitions",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Nasim\\Desktop\\darksky",
      "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\stepDefinitions\\Homepage.stepDef.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\Nasim\\Desktop\\darksky",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\stepDefinitions\\Homepage.stepDef.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\stepDefinitions\\Homepage.stepDef.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\stepDefinitions",
        "sourceFileName": "Homepage.stepDef.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cucumber = require(\"cucumber\");\n\nvar _HomePage = _interopRequireDefault(require(\"../page/HomePage\"));\n\nvar _chai = require(\"chai\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar currentTemp, timeLineArr;\n(0, _cucumber.Given)(/^I navigate to darksky homepage$/, function () {\n  _HomePage.default.open();\n});\n(0, _cucumber.When)(/^I get all the time in the timeline$/, function () {\n  timeLineArr = _HomePage.default.getTimelineHours();\n});\n(0, _cucumber.Then)(/^I should verify they are incremented by 2 hours$/, function () {\n  _chai.assert.isTrue(_HomePage.default.validateIncrementBy2(timeLineArr));\n});\n(0, _cucumber.Given)(/^I am on the darksky homepage$/, function () {\n  var title = browser.getUrl();\n  (0, _chai.expect)(title).to.equal('https://darksky.net/forecast/40.7127,-74.0059/us12/en');\n});\n(0, _cucumber.When)(/^I get the current temp$/, function () {\n  currentTemp = _HomePage.default.currentTemp.getText();\n  currentTemp = currentTemp.split(' ')[0];\n  currentTemp = currentTemp.replace('Ëš', '');\n});\n(0, _cucumber.Then)(/^I should verify it is not lower than the lowest value from the timeline temp$/, function () {\n  _HomePage.default.validateCurrentTempWithTimeline(currentTemp);\n});\n(0, _cucumber.Then)(/^I want to verify the temp is valid through the API$/, function () {\n  _HomePage.default.validateCurrentTempAPI(currentTemp, '67d6aac020fb58bdbd635673bac38b2f', '40.7127', '-74.0059');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhvbWVwYWdlLnN0ZXBEZWYuanMiXSwibmFtZXMiOlsiY3VycmVudFRlbXAiLCJ0aW1lTGluZUFyciIsIkhvbWVQYWdlIiwib3BlbiIsImdldFRpbWVsaW5lSG91cnMiLCJhc3NlcnQiLCJpc1RydWUiLCJ2YWxpZGF0ZUluY3JlbWVudEJ5MiIsInRpdGxlIiwiYnJvd3NlciIsImdldFVybCIsInRvIiwiZXF1YWwiLCJnZXRUZXh0Iiwic3BsaXQiLCJyZXBsYWNlIiwidmFsaWRhdGVDdXJyZW50VGVtcFdpdGhUaW1lbGluZSIsInZhbGlkYXRlQ3VycmVudFRlbXBBUEkiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFJQSxXQUFKLEVBQWlCQyxXQUFqQjtBQUVBLHFCQUFNLGtDQUFOLEVBQTBDLFlBQVc7QUFDakRDLG9CQUFTQyxJQUFUO0FBQ0gsQ0FGRDtBQUlBLG9CQUFLLHNDQUFMLEVBQTZDLFlBQVc7QUFDcERGLEVBQUFBLFdBQVcsR0FBR0Msa0JBQVNFLGdCQUFULEVBQWQ7QUFDSCxDQUZEO0FBSUEsb0JBQUssbURBQUwsRUFBMEQsWUFBVztBQUNqRUMsZUFBT0MsTUFBUCxDQUFjSixrQkFBU0ssb0JBQVQsQ0FBOEJOLFdBQTlCLENBQWQ7QUFDSCxDQUZEO0FBSUEscUJBQU0sZ0NBQU4sRUFBd0MsWUFBVztBQUMvQyxNQUFJTyxLQUFLLEdBQUdDLE9BQU8sQ0FBQ0MsTUFBUixFQUFaO0FBQ0Esb0JBQU9GLEtBQVAsRUFBY0csRUFBZCxDQUFpQkMsS0FBakIsQ0FBdUIsdURBQXZCO0FBQ0gsQ0FIRDtBQUtBLG9CQUFLLDBCQUFMLEVBQWlDLFlBQVc7QUFDeENaLEVBQUFBLFdBQVcsR0FBR0Usa0JBQVNGLFdBQVQsQ0FBcUJhLE9BQXJCLEVBQWQ7QUFDQWIsRUFBQUEsV0FBVyxHQUFHQSxXQUFXLENBQUNjLEtBQVosQ0FBa0IsR0FBbEIsRUFBdUIsQ0FBdkIsQ0FBZDtBQUNBZCxFQUFBQSxXQUFXLEdBQUdBLFdBQVcsQ0FBQ2UsT0FBWixDQUFvQixHQUFwQixFQUF5QixFQUF6QixDQUFkO0FBQ0gsQ0FKRDtBQU1BLG9CQUFLLGdGQUFMLEVBQXVGLFlBQVc7QUFDOUZiLG9CQUFTYywrQkFBVCxDQUF5Q2hCLFdBQXpDO0FBQ0gsQ0FGRDtBQUlBLG9CQUFLLHNEQUFMLEVBQTZELFlBQVc7QUFDcEVFLG9CQUFTZSxzQkFBVCxDQUFnQ2pCLFdBQWhDLEVBQTZDLGtDQUE3QyxFQUFpRixTQUFqRixFQUE0RixVQUE1RjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxOYXNpbVxcRGVza3RvcFxcZGFya3NreVxcdGVzdFxcc3RlcERlZmluaXRpb25zIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtHaXZlbiwgV2hlbiwgVGhlbn0gZnJvbSAnY3VjdW1iZXInO1xyXG5pbXBvcnQgSG9tZVBhZ2UgZnJvbSAnLi4vcGFnZS9Ib21lUGFnZSc7XHJcbmltcG9ydCB7IGV4cGVjdCwgYXNzZXJ0IH0gZnJvbSAnY2hhaSc7XHJcblxyXG52YXIgY3VycmVudFRlbXAsIHRpbWVMaW5lQXJyO1xyXG5cclxuR2l2ZW4oL15JIG5hdmlnYXRlIHRvIGRhcmtza3kgaG9tZXBhZ2UkLywgZnVuY3Rpb24oKSB7XHJcbiAgICBIb21lUGFnZS5vcGVuKCk7XHJcbn0pO1xyXG5cclxuV2hlbigvXkkgZ2V0IGFsbCB0aGUgdGltZSBpbiB0aGUgdGltZWxpbmUkLywgZnVuY3Rpb24oKSB7XHJcbiAgICB0aW1lTGluZUFyciA9IEhvbWVQYWdlLmdldFRpbWVsaW5lSG91cnMoKTtcclxufSk7XHJcblxyXG5UaGVuKC9eSSBzaG91bGQgdmVyaWZ5IHRoZXkgYXJlIGluY3JlbWVudGVkIGJ5IDIgaG91cnMkLywgZnVuY3Rpb24oKSB7XHJcbiAgICBhc3NlcnQuaXNUcnVlKEhvbWVQYWdlLnZhbGlkYXRlSW5jcmVtZW50QnkyKHRpbWVMaW5lQXJyKSk7XHJcbn0pO1xyXG5cclxuR2l2ZW4oL15JIGFtIG9uIHRoZSBkYXJrc2t5IGhvbWVwYWdlJC8sIGZ1bmN0aW9uKCkgeyBcclxuICAgIHZhciB0aXRsZSA9IGJyb3dzZXIuZ2V0VXJsKCk7XHJcbiAgICBleHBlY3QodGl0bGUpLnRvLmVxdWFsKCdodHRwczovL2Rhcmtza3kubmV0L2ZvcmVjYXN0LzQwLjcxMjcsLTc0LjAwNTkvdXMxMi9lbicpO1xyXG59KTtcclxuXHJcbldoZW4oL15JIGdldCB0aGUgY3VycmVudCB0ZW1wJC8sIGZ1bmN0aW9uKCkge1xyXG4gICAgY3VycmVudFRlbXAgPSBIb21lUGFnZS5jdXJyZW50VGVtcC5nZXRUZXh0KCk7XHJcbiAgICBjdXJyZW50VGVtcCA9IGN1cnJlbnRUZW1wLnNwbGl0KCcgJylbMF07XHJcbiAgICBjdXJyZW50VGVtcCA9IGN1cnJlbnRUZW1wLnJlcGxhY2UoJ8uaJywgJycpO1xyXG59KTtcclxuXHJcblRoZW4oL15JIHNob3VsZCB2ZXJpZnkgaXQgaXMgbm90IGxvd2VyIHRoYW4gdGhlIGxvd2VzdCB2YWx1ZSBmcm9tIHRoZSB0aW1lbGluZSB0ZW1wJC8sIGZ1bmN0aW9uKCkge1xyXG4gICAgSG9tZVBhZ2UudmFsaWRhdGVDdXJyZW50VGVtcFdpdGhUaW1lbGluZShjdXJyZW50VGVtcCk7XHJcbn0pO1xyXG5cclxuVGhlbigvXkkgd2FudCB0byB2ZXJpZnkgdGhlIHRlbXAgaXMgdmFsaWQgdGhyb3VnaCB0aGUgQVBJJC8sIGZ1bmN0aW9uKCkge1xyXG4gICAgSG9tZVBhZ2UudmFsaWRhdGVDdXJyZW50VGVtcEFQSShjdXJyZW50VGVtcCwgJzY3ZDZhYWMwMjBmYjU4YmRiZDYzNTY3M2JhYzM4YjJmJywgJzQwLjcxMjcnLCAnLTc0LjAwNTknKTtcclxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Homepage.stepDef.js"
      ],
      "names": [
        "currentTemp",
        "timeLineArr",
        "HomePage",
        "open",
        "getTimelineHours",
        "assert",
        "isTrue",
        "validateIncrementBy2",
        "title",
        "browser",
        "getUrl",
        "to",
        "equal",
        "getText",
        "split",
        "replace",
        "validateCurrentTempWithTimeline",
        "validateCurrentTempAPI"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,WAAJ,EAAiBC,WAAjB;AAEA,qBAAM,kCAAN,EAA0C,YAAW;AACjDC,oBAASC,IAAT;AACH,CAFD;AAIA,oBAAK,sCAAL,EAA6C,YAAW;AACpDF,EAAAA,WAAW,GAAGC,kBAASE,gBAAT,EAAd;AACH,CAFD;AAIA,oBAAK,mDAAL,EAA0D,YAAW;AACjEC,eAAOC,MAAP,CAAcJ,kBAASK,oBAAT,CAA8BN,WAA9B,CAAd;AACH,CAFD;AAIA,qBAAM,gCAAN,EAAwC,YAAW;AAC/C,MAAIO,KAAK,GAAGC,OAAO,CAACC,MAAR,EAAZ;AACA,oBAAOF,KAAP,EAAcG,EAAd,CAAiBC,KAAjB,CAAuB,uDAAvB;AACH,CAHD;AAKA,oBAAK,0BAAL,EAAiC,YAAW;AACxCZ,EAAAA,WAAW,GAAGE,kBAASF,WAAT,CAAqBa,OAArB,EAAd;AACAb,EAAAA,WAAW,GAAGA,WAAW,CAACc,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAd;AACAd,EAAAA,WAAW,GAAGA,WAAW,CAACe,OAAZ,CAAoB,GAApB,EAAyB,EAAzB,CAAd;AACH,CAJD;AAMA,oBAAK,gFAAL,EAAuF,YAAW;AAC9Fb,oBAASc,+BAAT,CAAyChB,WAAzC;AACH,CAFD;AAIA,oBAAK,sDAAL,EAA6D,YAAW;AACpEE,oBAASe,sBAAT,CAAgCjB,WAAhC,EAA6C,kCAA7C,EAAiF,SAAjF,EAA4F,UAA5F;AACH,CAFD",
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\stepDefinitions",
      "sourcesContent": [
        "import {Given, When, Then} from 'cucumber';\r\nimport HomePage from '../page/HomePage';\r\nimport { expect, assert } from 'chai';\r\n\r\nvar currentTemp, timeLineArr;\r\n\r\nGiven(/^I navigate to darksky homepage$/, function() {\r\n    HomePage.open();\r\n});\r\n\r\nWhen(/^I get all the time in the timeline$/, function() {\r\n    timeLineArr = HomePage.getTimelineHours();\r\n});\r\n\r\nThen(/^I should verify they are incremented by 2 hours$/, function() {\r\n    assert.isTrue(HomePage.validateIncrementBy2(timeLineArr));\r\n});\r\n\r\nGiven(/^I am on the darksky homepage$/, function() { \r\n    var title = browser.getUrl();\r\n    expect(title).to.equal('https://darksky.net/forecast/40.7127,-74.0059/us12/en');\r\n});\r\n\r\nWhen(/^I get the current temp$/, function() {\r\n    currentTemp = HomePage.currentTemp.getText();\r\n    currentTemp = currentTemp.split(' ')[0];\r\n    currentTemp = currentTemp.replace('Ëš', '');\r\n});\r\n\r\nThen(/^I should verify it is not lower than the lowest value from the timeline temp$/, function() {\r\n    HomePage.validateCurrentTempWithTimeline(currentTemp);\r\n});\r\n\r\nThen(/^I want to verify the temp is valid through the API$/, function() {\r\n    HomePage.validateCurrentTempAPI(currentTemp, '67d6aac020fb58bdbd635673bac38b2f', '40.7127', '-74.0059');\r\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1578843213161
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\page\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"filename\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\page\\\\HomePage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"plugins\":[{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Nasim\\Desktop\\darksky",
      "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\HomePage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\Nasim\\Desktop\\darksky",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\HomePage.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\HomePage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
        "sourceFileName": "HomePage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _BasePage = _interopRequireDefault(require(\"./BasePage\"));\n\nvar _chai = require(\"chai\");\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass HomePage extends _BasePage.default {\n  open() {\n    super.open('/forecast/40.7127,-74.0059/us12/en');\n  }\n\n  get timeline() {\n    return $('.hours');\n  }\n\n  get currentTemp() {\n    return $('//*[@id=\"title\"]/span[1]/span[2]/span[1]');\n  }\n\n  get timelineTemps() {\n    return $('.temps');\n  }\n\n  validateCurrentTempAPI(currentTemp, key, latitude, longitude) {\n    (0, _request.default)('https://api.darksky.net/forecast/' + key + '/' + latitude + ',' + longitude, function (error, response, body) {\n      if (!error && response.statusCode == 200) {\n        // converting to json and rounding the current temperature in the api\n        var json = JSON.parse(body);\n        var jsonCurrentTemp = Math.round(json.currently.temperature);\n        console.log(jsonCurrentTemp);\n        console.log(currentTemp);\n        (0, _chai.expect)(currentTemp).to.equals(jsonCurrentTemp);\n      }\n    });\n  }\n\n  validateCurrentTempWithTimeline(currentTemp) {\n    let timelineTemps = this.timelineTemps;\n    let timelineArr = timelineTemps.getText().split('\\n');\n    let modifiedTempArr = []; // removing degree symbol and converting to Integer\n\n    for (var i = 0; i < timelineArr.length; i++) {\n      let temp = timelineArr[i].replace('Â°', '');\n      temp = parseInt(temp);\n      modifiedTempArr.push(temp);\n    } // using Math library for min and max\n\n\n    let lowestTimelineTemp = Math.min(...modifiedTempArr);\n    let highestTimelineTemp = Math.max(...modifiedTempArr);\n\n    _chai.assert.isAtLeast(parseInt(currentTemp), lowestTimelineTemp, currentTemp + ' is more than or equal to ' + lowestTimelineTemp);\n\n    _chai.assert.isAtMost(parseInt(currentTemp), highestTimelineTemp, currentTemp + ' is less than or equal to ' + highestTimelineTemp);\n  } // mapping to 24 hour time and looping over to see if increment by 2\n\n\n  validateIncrementBy2(data) {\n    const hours = data.map(t => t === '12am' ? 0 : t === '12pm' ? 12 : (t.includes('pm') ? 12 : 0) + parseInt(t));\n    return hours.every((h, i, a) => {\n      var next = (h % 24 + 2) % 24;\n      return a[i + 1] === undefined || a[i + 1] === next;\n    });\n  }\n\n  getTimelineHours() {\n    let timeline = this.timeline; // storing the timeline data into an array\n\n    let timelineArr = timeline.getText().split('\\n'); // creating a new array to remove the first element which is now\n\n    let modifiedTempArr = [];\n\n    for (var i = 1; i < timelineArr; i++) {\n      modifiedTempArr.push(timelineArr[i]);\n    }\n\n    return modifiedTempArr;\n  }\n\n}\n\nvar _default = new HomePage();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "HomePage.js"
      ],
      "names": [
        "HomePage",
        "BasePage",
        "open",
        "timeline",
        "$",
        "currentTemp",
        "timelineTemps",
        "validateCurrentTempAPI",
        "key",
        "latitude",
        "longitude",
        "error",
        "response",
        "body",
        "statusCode",
        "json",
        "JSON",
        "parse",
        "jsonCurrentTemp",
        "Math",
        "round",
        "currently",
        "temperature",
        "console",
        "log",
        "to",
        "equals",
        "validateCurrentTempWithTimeline",
        "timelineArr",
        "getText",
        "split",
        "modifiedTempArr",
        "i",
        "length",
        "temp",
        "replace",
        "parseInt",
        "push",
        "lowestTimelineTemp",
        "min",
        "highestTimelineTemp",
        "max",
        "assert",
        "isAtLeast",
        "isAtMost",
        "validateIncrementBy2",
        "data",
        "hours",
        "map",
        "t",
        "includes",
        "every",
        "h",
        "a",
        "next",
        "undefined",
        "getTimelineHours"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
      "sourcesContent": [
        "import BasePage from './BasePage';\r\nimport { expect, assert } from 'chai';\r\nimport request from 'request';\r\n\r\nclass HomePage extends BasePage {\r\n    open() {\r\n        super.open('/forecast/40.7127,-74.0059/us12/en');\r\n    }\r\n\r\n    get timeline() { return $('.hours'); }\r\n\r\n    get currentTemp() { return $('//*[@id=\"title\"]/span[1]/span[2]/span[1]'); }\r\n\r\n    get timelineTemps() { return $('.temps'); }\r\n\r\n    validateCurrentTempAPI(currentTemp, key, latitude, longitude) {\r\n        request('https://api.darksky.net/forecast/' + key + '/' + latitude + ',' + longitude, function (error, response, body) {\r\n            if (!error && response.statusCode == 200) {\r\n                // converting to json and rounding the current temperature in the api\r\n                var json = JSON.parse(body);\r\n                var jsonCurrentTemp = Math.round(json.currently.temperature);\r\n                console.log(jsonCurrentTemp);\r\n                console.log(currentTemp);\r\n                expect(currentTemp).to.equals(jsonCurrentTemp);\r\n          }\r\n        });\r\n    }\r\n\r\n    validateCurrentTempWithTimeline(currentTemp) {\r\n        let timelineTemps = this.timelineTemps;\r\n        let timelineArr = timelineTemps.getText().split('\\n');\r\n        let modifiedTempArr = [];\r\n        // removing degree symbol and converting to Integer\r\n        for(var i = 0; i < timelineArr.length; i++) {\r\n            let temp = timelineArr[i].replace('Â°', '');\r\n            temp = parseInt(temp);\r\n            modifiedTempArr.push(temp);\r\n        }\r\n        // using Math library for min and max\r\n        let lowestTimelineTemp = Math.min(...modifiedTempArr);\r\n        let highestTimelineTemp = Math.max(...modifiedTempArr);\r\n\r\n        assert.isAtLeast(parseInt(currentTemp), lowestTimelineTemp, \r\n            currentTemp + ' is more than or equal to ' + lowestTimelineTemp);\r\n \r\n        assert.isAtMost(parseInt(currentTemp), highestTimelineTemp, \r\n            currentTemp + ' is less than or equal to ' + highestTimelineTemp);\r\n    }\r\n\r\n    // mapping to 24 hour time and looping over to see if increment by 2\r\n    validateIncrementBy2(data) {\r\n        const hours = data.map(t => t === '12am' ? 0 : t === '12pm' ? 12 : (t.includes('pm') ? 12 : 0) + parseInt(t));\r\n        return hours.every((h, i, a) => {\r\n          var next = (h % 24 + 2) % 24;\r\n          return a[i + 1] === undefined || a[i + 1] === next;\r\n        });\r\n    }\r\n\r\n    getTimelineHours() {\r\n        let timeline = this.timeline;\r\n\r\n        // storing the timeline data into an array\r\n        let timelineArr = timeline.getText().split('\\n');\r\n        \r\n        // creating a new array to remove the first element which is now\r\n        let modifiedTempArr = [];\r\n        for(var i = 1; i < timelineArr; i++) {\r\n           modifiedTempArr.push(timelineArr[i]);\r\n        }\r\n        return modifiedTempArr;\r\n    } \r\n}\r\n\r\nexport default new HomePage();"
      ]
    },
    "sourceType": "script",
    "mtime": 1578843228916
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\page\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"filename\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\page\\\\BasePage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"plugins\":[{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Nasim\\Desktop\\darksky",
      "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\BasePage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\Nasim\\Desktop\\darksky",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\BasePage.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\BasePage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
        "sourceFileName": "BasePage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass BasePage {\n  open(path) {\n    browser.url(path);\n    browser.maximizeWindow();\n  }\n\n}\n\nvar _default = BasePage;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2VQYWdlLmpzIl0sIm5hbWVzIjpbIkJhc2VQYWdlIiwib3BlbiIsInBhdGgiLCJicm93c2VyIiwidXJsIiwibWF4aW1pemVXaW5kb3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQSxRQUFOLENBQWU7QUFDWEMsRUFBQUEsSUFBSSxDQUFDQyxJQUFELEVBQU87QUFDUEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVo7QUFDQUMsSUFBQUEsT0FBTyxDQUFDRSxjQUFSO0FBQ0g7O0FBSlU7O2VBT0FMLFEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxOYXNpbVxcRGVza3RvcFxcZGFya3NreVxcdGVzdFxccGFnZSIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEJhc2VQYWdlIHtcclxuICAgIG9wZW4ocGF0aCkge1xyXG4gICAgICAgIGJyb3dzZXIudXJsKHBhdGgpO1xyXG4gICAgICAgIGJyb3dzZXIubWF4aW1pemVXaW5kb3coKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQmFzZVBhZ2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "BasePage.js"
      ],
      "names": [
        "BasePage",
        "open",
        "path",
        "browser",
        "url",
        "maximizeWindow"
      ],
      "mappings": ";;;;;;;AAAA,MAAMA,QAAN,CAAe;AACXC,EAAAA,IAAI,CAACC,IAAD,EAAO;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACE,cAAR;AACH;;AAJU;;eAOAL,Q",
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
      "sourcesContent": [
        "class BasePage {\r\n    open(path) {\r\n        browser.url(path);\r\n        browser.maximizeWindow();\r\n    }\r\n}\r\n\r\nexport default BasePage;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578528575853
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\page\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"filename\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\page\\\\HomePage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"plugins\":[{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Nasim\\Desktop\\darksky",
      "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\HomePage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\Nasim\\Desktop\\darksky",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\HomePage.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\HomePage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
        "sourceFileName": "HomePage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _BasePage = _interopRequireDefault(require(\"./BasePage\"));\n\nvar _chai = require(\"chai\");\n\nvar _request = _interopRequireDefault(require(\"request\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass HomePage extends _BasePage.default {\n  open() {\n    super.open('/forecast/40.7127,-74.0059/us12/en');\n  }\n\n  get timeline() {\n    return $('.hours');\n  }\n\n  get currentTemp() {\n    return $('//*[@id=\"title\"]/span[1]/span[2]/span[1]');\n  }\n\n  get timelineTemps() {\n    return $('.temps');\n  }\n\n  validateCurrentTempAPI(currentTemp, key, latitude, longitude) {\n    (0, _request.default)('https://api.darksky.net/forecast/' + key + '/' + latitude + ',' + longitude, function (error, response, body) {\n      if (!error && response.statusCode == 200) {\n        // converting to json and rounding the current temperature in the api\n        var json = JSON.parse(body);\n        var jsonCurrentTemp = Math.round(json.currently.temperature);\n        (0, _chai.expect)(parseInt(currentTemp)).to.equals(jsonCurrentTemp);\n      }\n    });\n  }\n\n  validateCurrentTempWithTimeline(currentTemp) {\n    let timelineTemps = this.timelineTemps;\n    let timelineArr = timelineTemps.getText().split('\\n');\n    let modifiedTempArr = []; // removing degree symbol and converting to Integer\n\n    for (var i = 0; i < timelineArr.length; i++) {\n      let temp = timelineArr[i].replace('Â°', '');\n      temp = parseInt(temp);\n      modifiedTempArr.push(temp);\n    } // using Math library for min and max\n\n\n    let lowestTimelineTemp = Math.min(...modifiedTempArr);\n    let highestTimelineTemp = Math.max(...modifiedTempArr);\n\n    _chai.assert.isAtLeast(parseInt(currentTemp), lowestTimelineTemp, currentTemp + ' is more than or equal to ' + lowestTimelineTemp);\n\n    _chai.assert.isAtMost(parseInt(currentTemp), highestTimelineTemp, currentTemp + ' is less than or equal to ' + highestTimelineTemp);\n  } // mapping to 24 hour time and looping over to see if increment by 2\n\n\n  validateIncrementBy2(data) {\n    const hours = data.map(t => t === '12am' ? 0 : t === '12pm' ? 12 : (t.includes('pm') ? 12 : 0) + parseInt(t));\n    return hours.every((h, i, a) => {\n      var next = (h % 24 + 2) % 24;\n      return a[i + 1] === undefined || a[i + 1] === next;\n    });\n  }\n\n  getTimelineHours() {\n    let timeline = this.timeline; // storing the timeline data into an array\n\n    let timelineArr = timeline.getText().split('\\n'); // creating a new array to remove the first element which is now\n\n    let modifiedTempArr = [];\n\n    for (var i = 1; i < timelineArr; i++) {\n      modifiedTempArr.push(timelineArr[i]);\n    }\n\n    return modifiedTempArr;\n  }\n\n}\n\nvar _default = new HomePage();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "HomePage.js"
      ],
      "names": [
        "HomePage",
        "BasePage",
        "open",
        "timeline",
        "$",
        "currentTemp",
        "timelineTemps",
        "validateCurrentTempAPI",
        "key",
        "latitude",
        "longitude",
        "error",
        "response",
        "body",
        "statusCode",
        "json",
        "JSON",
        "parse",
        "jsonCurrentTemp",
        "Math",
        "round",
        "currently",
        "temperature",
        "parseInt",
        "to",
        "equals",
        "validateCurrentTempWithTimeline",
        "timelineArr",
        "getText",
        "split",
        "modifiedTempArr",
        "i",
        "length",
        "temp",
        "replace",
        "push",
        "lowestTimelineTemp",
        "min",
        "highestTimelineTemp",
        "max",
        "assert",
        "isAtLeast",
        "isAtMost",
        "validateIncrementBy2",
        "data",
        "hours",
        "map",
        "t",
        "includes",
        "every",
        "h",
        "a",
        "next",
        "undefined",
        "getTimelineHours"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
      "sourcesContent": [
        "import BasePage from './BasePage';\r\nimport { expect, assert } from 'chai';\r\nimport request from 'request';\r\n\r\nclass HomePage extends BasePage {\r\n    open() {\r\n        super.open('/forecast/40.7127,-74.0059/us12/en');\r\n    }\r\n\r\n    get timeline() { return $('.hours'); }\r\n\r\n    get currentTemp() { return $('//*[@id=\"title\"]/span[1]/span[2]/span[1]'); }\r\n\r\n    get timelineTemps() { return $('.temps'); }\r\n\r\n    validateCurrentTempAPI(currentTemp, key, latitude, longitude) {\r\n        request('https://api.darksky.net/forecast/' + key + '/' + latitude + ',' + longitude, function (error, response, body) {\r\n            if (!error && response.statusCode == 200) {\r\n                // converting to json and rounding the current temperature in the api\r\n                var json = JSON.parse(body);\r\n                var jsonCurrentTemp = Math.round(json.currently.temperature);\r\n                expect(parseInt(currentTemp)).to.equals(jsonCurrentTemp);\r\n          }\r\n        });\r\n    }\r\n\r\n    validateCurrentTempWithTimeline(currentTemp) {\r\n        let timelineTemps = this.timelineTemps;\r\n        let timelineArr = timelineTemps.getText().split('\\n');\r\n        let modifiedTempArr = [];\r\n        // removing degree symbol and converting to Integer\r\n        for(var i = 0; i < timelineArr.length; i++) {\r\n            let temp = timelineArr[i].replace('Â°', '');\r\n            temp = parseInt(temp);\r\n            modifiedTempArr.push(temp);\r\n        }\r\n        // using Math library for min and max\r\n        let lowestTimelineTemp = Math.min(...modifiedTempArr);\r\n        let highestTimelineTemp = Math.max(...modifiedTempArr);\r\n\r\n        assert.isAtLeast(parseInt(currentTemp), lowestTimelineTemp, \r\n            currentTemp + ' is more than or equal to ' + lowestTimelineTemp);\r\n \r\n        assert.isAtMost(parseInt(currentTemp), highestTimelineTemp, \r\n            currentTemp + ' is less than or equal to ' + highestTimelineTemp);\r\n    }\r\n\r\n    // mapping to 24 hour time and looping over to see if increment by 2\r\n    validateIncrementBy2(data) {\r\n        const hours = data.map(t => t === '12am' ? 0 : t === '12pm' ? 12 : (t.includes('pm') ? 12 : 0) + parseInt(t));\r\n        return hours.every((h, i, a) => {\r\n          var next = (h % 24 + 2) % 24;\r\n          return a[i + 1] === undefined || a[i + 1] === next;\r\n        });\r\n    }\r\n\r\n    getTimelineHours() {\r\n        let timeline = this.timeline;\r\n\r\n        // storing the timeline data into an array\r\n        let timelineArr = timeline.getText().split('\\n');\r\n        \r\n        // creating a new array to remove the first element which is now\r\n        let modifiedTempArr = [];\r\n        for(var i = 1; i < timelineArr; i++) {\r\n           modifiedTempArr.push(timelineArr[i]);\r\n        }\r\n        return modifiedTempArr;\r\n    } \r\n}\r\n\r\nexport default new HomePage();"
      ]
    },
    "sourceType": "script",
    "mtime": 1578843297856
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\page\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"filename\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\\\\test\\\\page\\\\BasePage.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Nasim\\\\Desktop\\\\darksky\",\"plugins\":[{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Nasim\\Desktop\\darksky",
      "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\BasePage.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "C:\\Users\\Nasim\\Desktop\\darksky",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\BasePage.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page\\BasePage.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
        "sourceFileName": "BasePage.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass BasePage {\n  open(path) {\n    browser.url(path);\n    browser.maximizeWindow();\n  }\n\n}\n\nvar _default = BasePage;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhc2VQYWdlLmpzIl0sIm5hbWVzIjpbIkJhc2VQYWdlIiwib3BlbiIsInBhdGgiLCJicm93c2VyIiwidXJsIiwibWF4aW1pemVXaW5kb3ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQSxRQUFOLENBQWU7QUFDWEMsRUFBQUEsSUFBSSxDQUFDQyxJQUFELEVBQU87QUFDUEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVo7QUFDQUMsSUFBQUEsT0FBTyxDQUFDRSxjQUFSO0FBQ0g7O0FBSlU7O2VBT0FMLFEiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxOYXNpbVxcRGVza3RvcFxcZGFya3NreVxcdGVzdFxccGFnZSIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEJhc2VQYWdlIHtcclxuICAgIG9wZW4ocGF0aCkge1xyXG4gICAgICAgIGJyb3dzZXIudXJsKHBhdGgpO1xyXG4gICAgICAgIGJyb3dzZXIubWF4aW1pemVXaW5kb3coKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQmFzZVBhZ2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "BasePage.js"
      ],
      "names": [
        "BasePage",
        "open",
        "path",
        "browser",
        "url",
        "maximizeWindow"
      ],
      "mappings": ";;;;;;;AAAA,MAAMA,QAAN,CAAe;AACXC,EAAAA,IAAI,CAACC,IAAD,EAAO;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACE,cAAR;AACH;;AAJU;;eAOAL,Q",
      "sourceRoot": "C:\\Users\\Nasim\\Desktop\\darksky\\test\\page",
      "sourcesContent": [
        "class BasePage {\r\n    open(path) {\r\n        browser.url(path);\r\n        browser.maximizeWindow();\r\n    }\r\n}\r\n\r\nexport default BasePage;"
      ]
    },
    "sourceType": "script",
    "mtime": 1578528575853
  }
}